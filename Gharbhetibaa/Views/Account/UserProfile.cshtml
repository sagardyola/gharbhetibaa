@model Gharbhetibaa.Models.UserAccount

@{
    ViewBag.Title = "Profile";
    var imageURL = !string.IsNullOrEmpty(Model.ImageURL) ? "/images/UserAccount/" + Model.ImageURL : "/images/Shared/DefaultUser.png";
}

@if (TempData["SuccessEditProfile"] != null)
{
    <script>
        $("document").ready(function () {
            swal("Success!", "Profile Updated!!", "success");
        });
    </script>
}
<section id="userprofile">
    <div class="container">
        <div class="row justify-content-md-center">
            <div class="col-sm-12 col-md-5 login-box">
                <img class="avatar" id="productImage" width="150" height="150" src="@imageURL" />

                <div class="row mb-3">
                    <div class="col-12">
                        <h3 class="text-center mb-0">
                            <span class="txt-default">
                                &#64;@Html.DisplayTextFor(model => model.UserName)
                            </span>

                        </h3>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row text-right mb-2">
                    <div class="col-12">
                        @if (Model.UserName == User.Identity.Name && Model.IsVerified == false)
                        {
                            <button class="btn btn-danger mt-2 btn-sm rounded-0 btnVerify" data-toggle="modal" data-target="#modalVerify"><i class="far fa-times-circle mr-1"></i>NOT VERIFIED</button>
                        }
                        else if (Model.UserName == User.Identity.Name && Model.IsVerified == true)
                        {
                            <span class="btn btn-success mt-2 btn-sm rounded-0"><i class="far fa-check-circle mr-1"></i>VERIFIED</span>
                        }
                        else if (Model.UserName != User.Identity.Name && Model.IsVerified == false)
                        {
                            <span class="btn btn-danger mt-2 btn-sm rounded-0"><i class="far fa-times-circle mr-1"></i>NOT VERIFIED</span>
                        }
                        else if (Model.UserName != User.Identity.Name && Model.IsVerified == true)
                        {
                            <span class="btn btn-success mt-2 btn-sm rounded-0"><i class="far fa-check-circle mr-1"></i>VERIFIED</span>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayTextFor(model => model.FullName)

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayTextFor(model => model.Gender)
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayFor(model => Model.DateOfBirth)
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayTextFor(model => model.Address)
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayTextFor(model => model.MobileNumber)
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayTextFor(model => model.Email)

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.AboutMe, htmlAttributes: new { @class = "txt-default" })
                    </div>
                    <div class="col-sm-8 txt-secondary">
                        @Html.DisplayTextFor(model => model.AboutMe)
                    </div>
                </div>


            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="modalVerify" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content back-secondary" id="verifyCreate">

        </div>
    </div>
</div>

<script>
    $(".btnVerify").click(function () {
        $.ajax({
            url: "@Url.Action("Verification", "Account")",
            type: "get"
        }).done(function (response) {
            $("#verifyCreate").html(response);

            });
        });
</script>