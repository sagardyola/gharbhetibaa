@model Gharbhetibaa.ViewModels.ItemData

@{
    ViewBag.Title = "Item Details";
}

<section id="itemdetails">
    <div class="container">
        <div class="pages-box">
            @foreach (var i in Model.ItemDetails)
            {
                <div class="row topic-head text-center">
                    <div class="col-12">
                        <h3>@i.ItemTitle</h3>
                        <hr />
                    </div>
                </div>

                <div class="row mb-3 mt-2">
                    <div class="col-12 col-md-6 item-pic">
                        @if (i.PictureItems != null && i.PictureItems.Count > 0)
                        {
                            var firstItemPicture = i.PictureItems.First();
                            var c = 0;
                            <div id="carouselIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @foreach (var picture in i.PictureItems)
                                    {
                                        var active = picture == firstItemPicture ? "active" : string.Empty;
                                        <li class="@active" data-target="#carouselIndicators" data-slide-to="@c"></li>

                                        c++;
                                    }
                                </ol>
                                <div class="carousel-inner" role="listbox">

                                    @foreach (var itemPicture in i.PictureItems)
                                    {
                                        var active = itemPicture == firstItemPicture ? "active" : string.Empty;

                                        var picURL = "/images/Item/" + itemPicture.Picture.ImageLocation;
                                        <div class="carousel-item @active">
                                            <img class="w-100" height="350" src="@picURL">
                                        </div>
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        }
                        else
                        {
                            <img src="~/images/Shared/imagenotfound2.jpg" alt="" class="w-100" height="350" />
                        }

                    </div>
                    <div class="col-12 col-md-6">

                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => i.Price, htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-9">
                                Rs. @i.Price
                                @if (i.PriceNegotiable == true)
                                {
                                    <span>(Negotiable)</span>
                                }
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => i.Location, htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-9">
                                @i.Location, @i.City
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => i.Area, htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-9">
                                @i.Area
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => i.Description, htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-9">
                                @i.Description
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => i.PostedOn, htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-9">
                                @i.PostedOn.ToString("MM/dd/yyyy")
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-3">
                                @Html.LabelFor(model => i.AdExpiryDate, htmlAttributes: new { @class = "" })
                            </div>
                            <div class="col-9">
                                @i.AdExpiryDate.ToString("MM/dd/yyyy")
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-3">
                                Added by
                            </div>
                            <div class="col-9">
                                <b>
                                    @Html.ActionLink(Model.UserAccount.UserName, "UserProfile", new { controller = "Account", UserName = Model.UserAccount.UserName }, new { @class = "a-feature" })
                                </b>
                            </div>
                        </div>
                        <hr />


                        @if (!Model.UserAccount.UserName.Equals(@User.Identity.Name))
                        {
                            <div class="row text-center">
                                <div class="col-6">
                                    @using (Html.BeginForm("ItemWishList", "WishList", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <input type="hidden" name="ItemID" value="@i.ItemID" />

                                        if (ViewBag.WishListSuccess == true)
                                        {
                                            <button class="btn btn-outline-light border-0 txt-primary" type="submit">
                                                <i class="fas fa-bookmark txt-feature mr-1"></i>
                                                WishListed
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-light border-0 txt-primary" type="submit">
                                                <i class="far fa-bookmark mr-1"></i>
                                                Add to WishList?
                                            </button>
                                        }
                                    }
                                </div>
                                <div class="col-6">
                                    @using (Html.BeginForm("ItemBooking", "Booking", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <input type="hidden" name="ItemID" value="@i.ItemID" />
                                        if (ViewBag.BookingSuccess == true)
                                        {
                                            <button class="btn btn-outline-light border-0 txt-primary" type="submit">
                                                <i class="fas fa-check-circle txt-feature mr-1"></i>
                                                Booked
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-light border-0 txt-primary" type="submit">
                                                <i class="far fa-check-circle mr-1"></i>
                                                Book?
                                            </button>
                                        }
                                    }
                                </div>
                            </div>
                        }

                        @if (User.IsInRole("Admin"))
                        {
                            <div class="row text-center mt-1">
                                <div class="col-12">
                                    @using (Html.BeginForm("ItemFeature", "Dashboard", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <input type="hidden" name="ItemID" value="@i.ItemID" />
                                        if (ViewBag.FeatureSuccess == true)
                                        {
                                            <button class="btn btn-outline-light border-0 txt-primary" type="submit">
                                                <i class="fas fa-star txt-feature mr-1"></i>
                                                Featured
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-light border-0 txt-primary" type="submit">
                                                <i class="far fa-star mr-1"></i>
                                                Feature?
                                            </button>
                                        }
                                    }
                                </div>
                            </div>
                        }
                        </div>
                </div>

                @*Dont show for commercial and land*@
                if (i.ItemTypeID != 8 && i.ItemTypeID != 5)
                {
                    int count = 0;
                    <hr />
                    <div class="row">
                        <div class="col-6">
                            <div class="row">
                                <div class="col-12">
                                    <h4>Looking For</h4>
                                </div>
                            </div>
                            <div class="row mb-3 pl-5">
                                <div class="col-5">
                                    @Html.LabelFor(model => i.LookingFor.Gender, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-5">
                                    @i.LookingFor.Gender
                                </div>

                                <div class="col-5">
                                    @Html.LabelFor(model => i.LookingFor.MaritalStatus, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-5">
                                    @i.LookingFor.MaritalStatus
                                </div>
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="row">
                                <div class="col-12">
                                    <h4>Lifestyle</h4>
                                </div>
                            </div>
                            <div class="row mb-3 pl-5">
                                <div class="col-6">
                                    @Html.LabelFor(model => i.Lifestyle.OvernightGuests, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-6">
                                    @i.Lifestyle.OvernightGuests
                                </div>

                                <div class="col-6">
                                    @Html.LabelFor(model => i.Lifestyle.PartyHabits, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-6">
                                    @i.Lifestyle.PartyHabits
                                </div>

                                <div class="col-6">
                                    @Html.LabelFor(model => i.Lifestyle.Smoker, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-6">
                                    @i.Lifestyle.Smoker
                                </div>

                                <div class="col-6">
                                    @Html.LabelFor(model => i.Lifestyle.PetsFriendly, htmlAttributes: new { @class = "" })
                                </div>
                                <div class="col-6">
                                    @i.Lifestyle.PetsFriendly
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <hr />
                            <h4>Room Details</h4>
                        </div>
                    </div>

                    <div class="row mb-3 pl-5">
                        @if (i.RoomDetail.LivingRoom == true)
                        {
                            count = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.RoomDetail.LivingRoom, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.RoomDetail.BedRoom == true)
                        {
                            count = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.RoomDetail.BedRoom, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.RoomDetail.Kitchen == true)
                        {
                            count = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.RoomDetail.Kitchen, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.RoomDetail.Bathroom == true)
                        {
                            count = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.RoomDetail.Bathroom, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.RoomDetail.Balcony == true)
                        {
                            count = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.RoomDetail.Balcony, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        <div class="col-12">
                            @if (count == 0)
                            {
                                <span>[Not Available]</span>
                            }
                        </div>
                    </div>
                }

                <div class="row">
                    <div class="col-12">
                        <hr />
                        <h4>Other Features</h4>
                    </div>
                </div>

                {
                    int temp = 0;

                    <div class="row mb-3 pl-5">
                        @if (i.OtherFeature.Garden == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.Garden, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.ParkingSpace == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.ParkingSpace, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.Garage == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.Garage, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.SecurityGuard == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.SecurityGuard, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.BackupGenerator == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.BackupGenerator, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.WaterSupply == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.WaterSupply, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.Internet == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.Internet, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.Gymnasium == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.Gymnasium, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.SwimmingPool == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.SwimmingPool, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        @if (i.OtherFeature.Elevator == true)
                        {
                            temp = 1;
                            <div class="col-6 col-md-3">
                                <i class="fas fa-check"></i>
                                @Html.LabelFor(model => i.OtherFeature.Elevator, htmlAttributes: new { @class = "ml-1" })
                            </div>
                        }

                        <div class="col-12">
                            @if (temp == 0)
                            {
                                <span>[Not Available]</span>
                            }
                        </div>
                    </div>
                }


                @*@using (Html.BeginForm("ItemComment", "AddComment", FormMethod.Post))*@
                using (Ajax.BeginForm("ItemComment", "PostComment", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" }, new { @id = "commentForm", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <hr />
                    <div class="row mb-3 text-right mt-4">
                        <div class="col-6">
                            @Html.TextAreaFor(model => model.CommentItem.CommentTitle, htmlAttributes: new { @class = "form-control rounded-0 cmntItem", @placeholder = @Html.DisplayNameFor(n => n.CommentItem.CommentTitle), @rows = 2 })
                            @Html.ValidationMessageFor(model => model.CommentItem.CommentTitle, "", new { @class = "text-danger" })

                            <input type="hidden" name="ItemID" value="@i.ItemID" />
                            <button class="btn btn-primary rounded-0 mt-2" type="submit" id="btnComment">Comment</button>
                        </div>
                    </div>
                }


                <div class="row mb-3">
                    <div class="col-12">
                        @foreach (var n in Model.CommentItems)
                        {
                            var imageURL = !string.IsNullOrEmpty(n.UserAccount.ImageURL) ? "/images/UserAccount/" + n.UserAccount.ImageURL : "/images/Shared/DefaultUser.png";

                            <div class="media">
                                <img class="avatar" id="productImage" width="35" height="35" src="@imageURL" />
                                <div class="media-body ml-3">
                                    @Html.ActionLink(@n.UserAccount.UserName, "UserProfile", new { controller = "Account", UserName = @n.UserAccount.UserName }, new { @class = "a-feature" })

                                    @n.CommentTitle

                                    @if(n.UserAccount.UserName == @User.Identity.Name)
                                    {
                                    <button type="button" class="btn btnDeleteComment pt-0 pb-0" title="Delete Comment" data-id="@n.ItemID" cmnt-id="@n.CommentID"><i class="fas fa-trash-alt"></i></button>
                                    }
                                    <br>
                                    <small class="text-muted">
                                        @n.CommentedOn
                                    </small>
                                </div>
                            </div>
                            <br />
                            
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<script>
    $("#btnComment").click(function (){
        $.ajax({
            url: "@Url.Action("ItemComment", "PostComment")",
            type: "post",
            data: $("#commentForm").serialize()
        }).done(function (response) {

            if (response.Success) {
                $(".cmntItem").val('');
                window.location.reload();
            } else {


                }
            }).fail(function () {


            });
    });

    $('.btnDeleteComment').click(function () {
        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        url: "@Url.Action("DeleteItemComment", "PostComment")",
                        method: "post",
                        data: {
                            ItemID: $(this).attr("data-id"),
                            CommentID: $(this).attr("cmnt-id")
                        }
                    }).done(function (response) {
                        swal("Success", "Comment has been removed!", {
                            icon: "success",
                        })
                            .then((value) => {
                                window.location.reload();
                                
                            });
                    });

                }
            });
    });
</script>