@model Gharbhetibaa.Models.PropertyManagement.RentDetail

<div class="modal-header">
    <h5 class="modal-title text-white" id="exampleModalLongTitle">Update Rent Details</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true" class="text-white">&times;</span>
    </button>
</div>
<div class="modal-body bg-white">
    <div class="container mt-2">
        <div class="row mb-3">
            <div class="col-12 offset-md-1">
                <span class="text-danger font-weight-bold">*</span> Indicates required field
            </div>
        </div>

        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "rentForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.RentID)

            <div class="row mb-3">
                <div class="col-4 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="col-8 col-md-7">
                    @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = @Html.DisplayNameFor(n => n.Month) } })
                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.MonthlyRent, htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="col-8 col-md-7">
                    @Html.EditorFor(model => model.MonthlyRent, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = @Html.DisplayNameFor(n => n.MonthlyRent) } })
                    @Html.ValidationMessageFor(model => model.MonthlyRent, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.Electricity, htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="col-8 col-md-7">
                    @Html.EditorFor(model => model.Electricity, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = @Html.DisplayNameFor(n => n.Electricity) } })
                    @Html.ValidationMessageFor(model => model.Electricity, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.WaterSupply, htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="col-8 col-md-7">
                    @Html.EditorFor(model => model.WaterSupply, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = @Html.DisplayNameFor(n => n.WaterSupply) } })
                    @Html.ValidationMessageFor(model => model.WaterSupply, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.Miscellaneous, htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="col-8 col-md-7">
                    @Html.EditorFor(model => model.Miscellaneous, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = @Html.DisplayNameFor(n => n.Miscellaneous) } })
                    @Html.ValidationMessageFor(model => model.Miscellaneous, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-4 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.AmountPayed, htmlAttributes: new { @class = "col-form-label" })
                </div>
                <div class="col-8 col-md-7">
                    @Html.EditorFor(model => model.AmountPayed, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = @Html.DisplayNameFor(n => n.AmountPayed) } })
                    @Html.ValidationMessageFor(model => model.AmountPayed, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-12 col-md-7 offset-md-4 text-danger errorMsg" id="formErrors">
                </div>
            </div>
        }
    </div>
</div>
<div class="modal-footer back-light">
    <button type="button" class="btn btn-secondary rounded-0" data-dismiss="modal">Close</button>
    <button class="btn btn-primary rounded-0" id="btnSave" type="button">Save</button>
</div>


<script>
    $("#rentForm").validate({
        errorElement: 'div',

        rules: {
            Month: {
                required: true
            }
        },
        messages: {
            Month: {
                required: "This field is required."
            }
        }
    });

    $('#btnSave').click(function () {
        if ($("#rentForm").valid) {
            $.ajax({
                url: "@Url.Action("EditRentDetail", "TrackRentDetail")",
                method: "post",
                data: $("#rentForm").serialize()
            }).done(function (response) {
                if (response.Success) {
                    $('#modalCreate').modal('toggle');
                    ReloadEditRentListing();

                } else {
                    $("#formErrors").html(response.Error);
                    $("#formErrors").show();
                }
            });
        }

    });

</script>