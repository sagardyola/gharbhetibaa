@model Gharbhetibaa.Models.PropertyManagement.Tenant

<div class="modal-header">
    <h5 class="modal-title text-white" id="exampleModalLongTitle">Tenant Details</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true" class="text-white">&times;</span>
    </button>
</div>
<div class="modal-body bg-white">
    <section id="tenantdetails">
        <div class="container">
            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.TenantName, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7">
                    @Model.TenantName
                </div>
            </div>

            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.TenantAddress, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7">
                    @Model.TenantAddress
                </div>
            </div>

            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.TenantMobile, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7">
                    @Model.TenantMobile
                </div>
            </div>

            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.TenantEmail, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7 text-justify">
                    @Model.TenantEmail
                </div>
            </div>

            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.DateJoined, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7 text-justify">
                    @Model.DateJoined.ToShortDateString()
                </div>
            </div>

            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.NationalityID, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7 text-justify">
                    @Model.NationalityID
                </div>
            </div>

            <div class="row">
                <div class="col-6 col-md-3 offset-md-1">
                    @Html.LabelFor(model => model.TenantNotes, htmlAttributes: new { @class = "" })
                </div>
                <div class="col-6 col-md-7 text-justify">
                    @Model.TenantNotes
                </div>
            </div>

            <div class="row">
                <div class="col-12 col-md-10 offset-md-1">
                    <hr />
                    Contract Document(s)<br />

                    @if (Model.PictureContractDocs != null && Model.PictureContractDocs.Count > 0)
                    {
                        var firstItemPicture = Model.PictureContractDocs.First();
                        var c = 0;
                        <div id="carouselIndicators" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators">
                                @foreach (var picture in Model.PictureContractDocs)
                                {
                                    var active = picture == firstItemPicture ? "active" : string.Empty;
                                    <li class="@active" data-target="#carouselIndicators" data-slide-to="@c"></li>

                                    c++;
                                }
                            </ol>
                            <div class="carousel-inner" role="listbox">

                                @foreach (var itemPicture in Model.PictureContractDocs)
                                {
                                    var active = itemPicture == firstItemPicture ? "active" : string.Empty;

                                    var picURL = "/images/ContractDocuments/" + itemPicture.Picture.ImageLocation;
                                    <div class="carousel-item @active">
                                        <img class="w-100" height="350" src="@picURL">
                                    </div>
                                }
                            </div>
                            <a class="carousel-control-prev" href="#carouselIndicators" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#carouselIndicators" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    }
                    else
                    {
                        <img src="~/images/Shared/imagenotfound2.jpg" alt="" class="w-100" height="250" />
                    }
                </div>
            </div>
        </div>
    </section>
</div>
<div class="modal-footer back-light">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
</div>